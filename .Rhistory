# ok
dori_obis_ok <- dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
!is.na(datasetName),
!waterBody %in% c("North America", "North America Atlantic", "atlantique"))
dori_obis1 <- dori_obis %>%
select(scientificName, decimalLatitude, decimalLongitude, bathymetry,
flags, waterBody, basisOfRecord, occurrenceStatus, rightsHolder,
datasetName, recordedBy, depth, locality, habitat) %>%
distinct()
# ok
dori_obis_ok <- dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
!is.na(datasetName),
!waterBody %in% c("North America", "North America Atlantic", "atlantique"))
rm(list = setdiff(ls(), c("dori_obis_ok", "dori_gbif_ok")))
# ver diferencas
setdiff(names(dori_gbif_ok, dori_obis_ok))
# ver diferencas
setdiff(names(dori_gbif_ok), names(dori_obis_ok))
setdiff(names(dori_obis_ok), names(dori_gbif_ok))
bind_rows(dori_gbif_ok %>%
select(intersect(names(dori_gbif_ok), names(dori_obis_ok))),
dori_obis_ok %>%
select(intersect(names(dori_gbif_ok), names(dori_obis_ok))))
bind_rows(dori_gbif_ok %>%
select(intersect(names(dori_gbif_ok), names(dori_obis_ok))),
dori_obis_ok %>%
select(intersect(names(dori_gbif_ok), names(dori_obis_ok)))) %>%
lapply(., unique)
bind_rows(dori_gbif_ok, dori_obis_ok) %>% dim
bind_rows(dori_gbif_ok, dori_obis_ok) %>% head
bind_rows(dori_gbif_ok, dori_obis_ok) %>% data.frame() %>%  head
bind_rows(dori_gbif_ok, dori_obis_ok) %>% names()
bind_rows(dori_gbif_ok, dori_obis_ok)
bind_rows(dori_gbif_ok, dori_obis_ok) %>%
select(decimalLongitude, decimalLatitude, depth)
bind_rows(dori_gbif_ok, dori_obis_ok) %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
bind_rows(dori_gbif_ok %>%
mutate(repo = "gbif"),
dori_obis_ok%>%
mutate(repo = "obis"))
bind_rows(dori_gbif_ok %>%
mutate(repo = "gbif"),
dori_obis_ok%>%
mutate(repo = "obis")) %>%
select(decimalLongitude, decimalLatitude, depth, repo) %>%
distinct()
bind_rows(dori_gbif_ok %>%
mutate(repo = "gbif"),
dori_obis_ok%>%
mutate(repo = "obis")) %>%
column_to_rownames(repo)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste("gbif", row.names())),
dori_obis_ok%>%
mutate(repo = paste("obis", row.names())))
bind_rows(dori_gbif_ok %>%
mutate(repo = paste("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste("obis", row.names(.))))
bind_rows(dori_gbif_ok %>%
mutate(repo = paste("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste("obis", row.names(.)))) %>%
column_to_rownames("repo")
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo")
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>% dim
all_data <- bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
# map the occurrence data:
map("world", xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))  # if the map doesn't appear right at first, run this command again
??map
# map the occurrence data:
maps::map("world", xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))  # if the map doesn't appear right at first, run this command again
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
# map the occurrence data:
maps::map("world")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))  # if the map doesn't appear right at first, run this command again
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
# map the occurrence data:
maps::map("world")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
?occ_data
# # baixar ocorrencias
dori_gbif <- occ_data(scientificName = "Paracanthurus hepatus",
hasCoordinate = TRUE,
hasGeospatialIssue=FALSE)
gbif_issues() %>%
data.frame() %>%
filter(code %in% issues_gbif)
# checar problemas reportados
issues_gbif <- dori_gbif$data$issues %>%
unique() %>%
strsplit(., "[,]") %>%
unlist()
# checar problemas reportados
issues_gbif <- dori_gbif$data$issues %>%
unique() %>%
strsplit(., "[,]") %>%
unlist()
gbif_issues() %>%
data.frame() %>%
filter(code %in% issues_gbif)
?dplyr
?distinct
library(rfishbase)
?rfishbase
install.packages('rfishbase')
install.packages('rfishbase')
install.packages("rfishbase")
library(rfishbase)
?rfishbase
species("Paracanthurus hepatus")
par_hepa <- species("Paracanthurus hepatus")
?select
names(par_hepa)
par_hepa %>%
select(DepthRangeShallow, DepthRangeDeep)
par_hepa %>%
dplyr::select(DepthRangeShallow, DepthRangeDeep)
par_hepa %>%
dplyr::select(DepthRangeShallow, DepthRangeDeep, DepthRangeComDeep, DepthRangeRef,
DepthRangeComShallow, DepthComRef)
# map the occurrence data:
maps::map("world", main = "dd")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
# map the occurrence data:
maps::map("world", title = "dd")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
# map the occurrence data:
maps::map("world", main = "dd")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
# map the occurrence data:
maps::map("world", head = "dd")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
?map
# map the occurrence data:
maps::map("world",myborder = 0.01)#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
# unir GBIF e OBIS
rm(list = setdiff(ls(), c("dori_obis_ok", "dori_gbif_ok")))
# ver diferencas
setdiff(names(dori_gbif_ok), names(dori_obis_ok))
knitr::opts_chunk$set(echo = TRUE)
library(robis)
library(leaflet)
library(rgbif)
library(tidyverse)
# checar funcoes
?occ_data
# baixar ocorrencias
dori_gbif <- occ_data(scientificName = "Paracanthurus hepatus",
hasCoordinate = TRUE,
hasGeospatialIssue=FALSE)
# dimensoes
dim(dori_gbif)
dim(dori_gbif$data)
# checar campos
dori_gbif$data %>% names
# check issues
gbif_issues()
# checar problemas reportados
issues_gbif <- dori_gbif$data$issues %>%
unique() %>%
strsplit(., "[,]") %>%
unlist()
gbif_issues() %>%
data.frame() %>%
filter(code %in% issues_gbif)
dori_gbif1 <- dori_gbif$data %>%
select(scientificName, acceptedScientificName, decimalLatitude, decimalLongitude,
issues, waterBody, basisOfRecord, occurrenceStatus, rightsHolder,
datasetName, recordedBy, depth, locality, habitat)
dori_gbif1 <- dori_gbif1 %>%
distinct()
# checar niveis dos fatores
lapply(dori_gbif1, unique)
# investigar niveis suspeitos
dori_gbif1 %>%
distinct(waterBody) %>%
pull()
# waterBody
dori_gbif1 %>%
group_by(waterBody) %>%
summarise(occ = length(scientificName)) %>%
ggplot(aes(occ, y=waterBody)) +
geom_bar(stat = 'identity')
# fonte das regioes erradas
dori_gbif1 %>%
filter(waterBody %in% c("Atlantic Ocean", "Carribean", "Royal Caribbean", "Carribean Sea", "Bonaire")) %>%
distinct(datasetName)
# 27 ocorrencias
dori_gbif1 %>%
filter(datasetName %in% c("Diveboard - Scuba diving citizen science"))
# filtrar todas do dataset suspeito
dori_gbif_ok <- dori_gbif1 %>%
filter(!datasetName %in% c("Diveboard - Scuba diving citizen science"))
# checar pontos
dori_gbif_ok %>%
leaflet() %>%
addTiles() %>%
addMarkers(~decimalLongitude, ~decimalLatitude,
popup = ~as.character(datasetName),
label = ~as.character(scientificName),
clusterOptions = markerClusterOptions())
# checar profundidade
dori_gbif_ok %>%
ggplot(aes(x = depth, fill = waterBody)) +
geom_histogram()
## OBIS
dori_obis <- robis::occurrence("Paracanthurus hepatus")
# checar dados
names(dori_obis)
dori_obis1 <- dori_obis %>%
select(scientificName, decimalLatitude, decimalLongitude, bathymetry,
flags, waterBody, basisOfRecord, occurrenceStatus, rightsHolder,
datasetName, recordedBy, depth, locality, habitat) %>%
distinct()
# check problemas reportados (flags)
dori_obis1 %>%
distinct(flags)
# check NA em datasetName
dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
is.na(datasetName)) %>%
distinct(waterBody)
# depth ok
dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
!is.na(datasetName),
!waterBody %in% c("North America", "North America Atlantic", "atlantique")) %>%
ggplot(aes(x = depth, fill = waterBody)) +
geom_histogram()
# checar niveis
dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
!is.na(datasetName),
!waterBody %in% c("North America", "North America Atlantic", "atlantique")) %>%
lapply(., unique)
# ok
dori_obis_ok <- dori_obis1 %>%
filter(!flags %in% c("no_depth,on_land", "on_land", "on_land,depth_exceeds_bath", "depth_exceeds_bath,on_land"),
!is.na(datasetName),
!waterBody %in% c("North America", "North America Atlantic", "atlantique"))
# check
dori_obis_ok %>%
leaflet() %>%
addTiles() %>%
addMarkers(~decimalLongitude, ~decimalLatitude,
popup = ~as.character(datasetName),
label = ~as.character(recordedBy),
clusterOptions = markerClusterOptions())
# unir GBIF e OBIS
rm(list = setdiff(ls(), c("dori_obis_ok", "dori_gbif_ok")))
# ver diferencas
setdiff(names(dori_gbif_ok), names(dori_obis_ok))
setdiff(names(dori_obis_ok), names(dori_gbif_ok))
all_data <- bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
# map the occurrence data:
maps::map("world", main = "Paracanthurus hepatus")#, xlim = range(all_data$decimalLongitude), ylim = range(all_data$decimalLatitude))
points(all_data[ , c("decimalLongitude", "decimalLatitude")], pch = ".", cex = 4, col = "red")
write.csv(all_data, "data/occ_GBIF-OBIS_par_hepa.csv", row.names = FALSE)
View(dori_gbif_ok)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct()
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence")
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(into = c("data_base", "rn"), sep = 4)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("data_base", "rn"), sep = 4) %>%
filter(-rn)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("data_base", "rn"), sep = 4)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("data_base", "rn"), sep = 4) %>% distinct(data_base)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("dataset", "rn"), sep = 4)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("dataset", "rn"), sep = 4) %>%
filter(-rn)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("dataset", "rn"), sep = 4) %>%
dplyr::filter(-rn)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok%>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occurence") %>%
separate(col = "occurence", into = c("dataset", "rn"), sep = 4) %>%
select(-rn)
bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok %>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occ") %>%
separate(col = "occ", into = c("datasetName", "rn"), sep = 4) %>%
mutate(scientificName = "Paracanthurus hepatus") %>%
select(-rn)
all_data <- bind_rows(dori_gbif_ok %>%
mutate(repo = paste0("gbif", row.names(.))),
dori_obis_ok %>%
mutate(repo = paste0("obis", row.names(.)))) %>%
column_to_rownames("repo") %>%
select(decimalLongitude, decimalLatitude, depth) %>%
distinct() %>%
rownames_to_column("occ") %>%
separate(col = "occ", into = c("datasetName", "rn"), sep = 4) %>%
mutate(scientificName = "Paracanthurus hepatus") %>%
select(-rn)
write.csv(all_data, "data/occ_GBIF-OBIS_par_hepa.csv", row.names = FALSE)
ocorrencias <- read.csv("data/occ_GBIF-OBIS_par_hepa.csv", header = TRUE)
library(ggmap)
# investigar niveis suspeitos
world <- map_data("world")
world
ggplot() %>%
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed()
# mapa
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed()
# mapa
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic()
# mapa + ocorrencias
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName))
# mapa + ocorrencias
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName))
# mapa + ocorrencias
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName)) +
theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude")
# mapa + ocorrencias
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName)) +
theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude", title = "Paracanthurus hepatus")
# mapa + ocorrencias
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName)) +
theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName, size = depth)) +
theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
ggplot() +
geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = decimalLatitude, color = datasetName, size = depth)) +
#theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = depth, color = datasetName, size = depth)) +
#theme(legend.title = element_blank()) +
labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = depth, color = datasetName, size = depth)) +
#theme(legend.title = element_blank()) +
#labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = depth, color = datasetName, size = depth)) #+
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = depth, color = datasetName, size = depth)) #+
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLongitude, y = depth, color = datasetName)) #+
ggplot() +
# geom_polygon(data = world, aes(x = long, y = lat, group = group)) +
# coord_fixed() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLatitude, y = depth, color = datasetName)) #+
ggplot() +
theme_classic() +
geom_point(data = ocorrencias, aes(x = decimalLatitude, y = depth, color = datasetName)) #+
#theme(legend.title = element_blank()) +
#labs(x = "longitude", y = "latitude", title = expression(italic("Paracanthurus hepatus")))
