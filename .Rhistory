addPolygons(data.shape,
lat = ~lat,
lng = ~lon,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
data.shape@data
data.shape@polygons
data.shape@proj4string
####
dori %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(data.shape,
lat = ~Lat,
lng = ~Lon,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
dori %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(data.shape,
lat = ~Lat,
lng = ~Lng,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
dori %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(data.shape,
lat = ~Lat,
lng = ~lng,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
dori %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(data.shape,
lat = ~lat,
lng = ~lng,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
dori %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(data.shape,
lat = ~lat,
lon = ~lng,
fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
head(data.shape)
head(NORFLU)
plot(NORFLU)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(dori,
~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
addCircleMarkers(data = dori,
~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
NORFLU %>%
leaflet() %>%
addTiles()
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
# addCircleMarkers(data = dori,
#                  ~decimalLongitude,
#                  ~decimalLatitude,
#                  radius = 5,
#                  label = ~as.character(datasetName),
#                  color = ~pal(dori$datasetName),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
# addLegend('bottomright',
#           colors = unique(pal(dori$datasetName)),
#           labels = unique(dori$datasetName),
#           title = 'Dataset',
#           opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NAME)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
# addCircleMarkers(data = dori,
#                  ~decimalLongitude,
#                  ~decimalLatitude,
#                  radius = 5,
#                  label = ~as.character(datasetName),
#                  color = ~pal(dori$datasetName),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
# addLegend('bottomright',
#           colors = unique(pal(dori$datasetName)),
#           labels = unique(dori$datasetName),
#           title = 'Dataset',
#           opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE))
NORFLU@data
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
# addCircleMarkers(data = dori,
#                  ~decimalLongitude,
#                  ~decimalLatitude,
#                  radius = 5,
#                  label = ~as.character(datasetName),
#                  color = ~pal(dori$datasetName),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
# addLegend('bottomright',
#           colors = unique(pal(dori$datasetName)),
#           labels = unique(dori$datasetName),
#           title = 'Dataset',
#           opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 5,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NM_MUNICIP)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
# addCircleMarkers(data = dori,
#                  ~decimalLongitude,
#                  ~decimalLatitude,
#                  radius = 5,
#                  label = ~as.character(datasetName),
#                  color = ~pal(dori$datasetName),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
# addLegend('bottomright',
#           colors = unique(pal(dori$datasetName)),
#           labels = unique(dori$datasetName),
#           title = 'Dataset',
#           opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 2,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NM_MUNICIP)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
# addCircleMarkers(data = dori,
#                  ~decimalLongitude,
#                  ~decimalLatitude,
#                  radius = 5,
#                  label = ~as.character(datasetName),
#                  color = ~pal(dori$datasetName),
#                  stroke = FALSE, fillOpacity = 0.5) %>%
# addLegend('bottomright',
#           colors = unique(pal(dori$datasetName)),
#           labels = unique(dori$datasetName),
#           title = 'Dataset',
#           opacity = 0.5) %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 1,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NM_MUNICIP)
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 1,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NM_MUNICIP) %>%
addCircleMarkers(data = dori,
~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) #%>%
####
NORFLU %>%
leaflet() %>%
addTiles() %>%
addPolygons(fillColor = "grey",
highlight = highlightOptions(weight = 1,
color = "red",
fillOpacity = 0.7,
bringToFront = TRUE),
label = ~NM_MUNICIP) %>%
addCircleMarkers(data = dori,
~decimalLongitude,
~decimalLatitude,
radius = 5,
label = ~as.character(datasetName),
color = ~pal(dori$datasetName),
stroke = FALSE, fillOpacity = 0.5) %>%
addLegend('bottomright',
colors = unique(pal(dori$datasetName)),
labels = unique(dori$datasetName),
title = 'Dataset',
opacity = 0.5)
campoxxx
write.csv(campoxxx, "campos_gbif_25apr2022.csv", row.names = FALSE)
campoxxx
campos %>%
group_by(kingdom, phylum, order) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(x = Sepal.Length, y = Sepal.Width, color = Species)) +
geom_point() +
theme_classic()
campos %>%
group_by(kingdom, phylum, order) %>%
summarise(richness = n_distinct(paste(genus, species))) %>% head
campoxxx %>%
group_by(kingdom, phylum, order) %>%
summarise(richness = n_distinct(paste(genus, species))) %>% head
campoxxx %>%
group_by(kingdom) %>%
summarise(richness = n_distinct(paste(genus, species))) %>% head
campoxxx %>%
group_by(kingdom, phylum, order) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = order)) +
geom_bar() +
theme_classic()
campoxxx %>%
group_by(kingdom, phylum, order) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = order)) +
geom_bar(stat = 'identity') +
theme_classic()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = class)) +
geom_bar(stat = 'identity') +
theme_classic()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = class)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = class)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = class, color = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(class)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, group = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, group = group)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip()
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip() +
facet_grid(kingdom ~ .)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip() +
facet_grid(~kingdom)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip() +
facet_grid(~kingdom, scales = "free")
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(class)
rank <- campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(class)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
mutate(class = factor(class, levels = rank)) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip() +
facet_grid(~kingdom, scales = "free")
rank
rank <- campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(phylum)
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
mutate(phylum = factor(phylum, levels = phylum)) %>%
ggplot(aes(y = richness, x = class, fill = kingdom)) +
geom_bar(stat = 'identity') +
theme_classic() +
coord_flip() +
facet_grid(~kingdom, scales = "free")
rank
campoxxx %>%
group_by(kingdom, phylum, class) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(class)
campoxxx %>%
group_by(kingdom, phylum, family) %>%
summarise(richness = n_distinct(paste(genus, species))) %>%
arrange(-richness) %>%
pull(family)
